# Do not store sensitive information and check-in code to gitlab

report:
  title: "Attack Surface Management Report"
  author: "John Doe"
  date: "2024-09-30"
  header: "Confidential - For Internal Use Only"
  footer: "Company XYZ - All Rights Reserved"
  format: "pdf"

workflow:
  - workflowName: 'default'
    schedule: 'daily between 00:00 and 04:00'
    cmd: []
    workflowConfig:
      - moduleName : discovery
        tools: ['Subfinder']
        order: 1
      - moduleName: prerecon
        tools: ['FindCDN', 'Naabu']
        order: 2
      - moduleName: activehostscan
        tools: ['HTTPX_Active', 'HTTPX']
        order: 3
      - moduleName: activerecon
        tools: ['Wafw00f']
        order: 4
      - moduleName: scan
        tools: [ 'DNSTwister', 'Nuclei', 'Corsy']
        order: 5
      - moduleName: secretscanner
        tools: ['SecretScanner','GithubScanner']
        order: 6

# This workflow is for product security teams. It includes tools like dns and Ipinfo. Please provide the key for IPinfo
  - workflowName: 'productsecurity'
    schedule: 'daily between 00:00 and 04:00'
    cmd: []
    scanNewOnly: true
    workflowConfig:
      - moduleName : dns
        tools: ['Route53', 'Cloudflare']
        order: 1
      - moduleName : discovery
        tools: ['Subfinder', 'SSLMate']
        order: 1
      - moduleName: prerecon
        tools: ['FindCDN', 'Naabu', 'IPinfo']
        order: 2
      - moduleName: activehostscan
        tools: ['HTTPX_Active', 'HTTPX']
        order: 3
      - moduleName: activerecon
        tools: ['Wafw00f']
        order: 4
      - moduleName: scan
        tools: [ 'DNSTwister', 'Nuclei', 'NucleiInfo', 'Corsy']
        order: 5
      - moduleName: secretscanner
        tools: ['SecretScanner']
        order: 6

  # This workflow excludes some tools viz SSLMate, IPinfo, DNSTwister, Csper
  - workflowName: 'bugbounty'
    schedule: 'daily between 00:00 and 04:00'
    cmd: []
    workflowConfig:
      - moduleName : discovery
        tools: ['Subfinder']
        order: 1
      - moduleName: prerecon
        tools: ['FindCDN', 'Naabu']
        order: 2
      - moduleName: activehostscan
        tools: ['HTTPX_Active', 'HTTPX']
        order: 3
      - moduleName: activerecon
        tools: ['Wafw00f']
        order: 4
      - moduleName: scan
        tools: [ 'Nuclei', 'NucleiInfo']
        order: 5
      - moduleName: secretscanner
        tools: ['SecretScanner']
        order: 6

  - workflowName: 'test'
    schedule: 'daily between 00:00 and 04:00'
    cmd: []
    workflowConfig:
      - moduleName : dns
        tools: ['Cloudflare']
        order: 1

  - workflowName: 'testreport'
    schedule: 'daily between 00:00 and 04:00'
    cmd: []
    workflowConfig:
      - moduleName : discovery
        tools: ['Subfinder']
        order: 1

nuclei_template_path:
  whitelist:
  blacklist:

aws:
  config_path:
  credentials_path:

secretscanner:
  # org       : This will perform scan at the org level (https://api.github.com/orgs/{org}/repos?page=)
  # public    : This will perform scan based on the Assets/Domain across public repos in the GitHub
  github_method: ['org','public']


github_config:
  host: "https://api.github.com"
  tokens : [] #encode the github PAT into Base64 and use it . ['Base64(github_PAT1)','Base64(github_PAT2)']
  download_location: '/tmp/repos/'

app:
  default: ["None"]

notify:
  - teamName: appsec
    scanEfficiency: true
    channel:
      slack:
        - None
      mattermost:
        - "https://mattermost.tld/hooks/my-personal-hook"
    app: []
    assets:
      - subdomain
      - certificate
    findings:
      - vulnerability
      - secret


dbConfig:
  mongoConnectionString: 'mongodb://mantis.db:27017'

logging:
  version: 1
  disable_existing_loggers: True
  formatters:
    default:
        format: "[%(asctime)s] --> %(levelname)s: %(message)s"
        "()": "mantis.config_parsers.logging_utils.CustomFormatter"
        
  handlers:
    console:
      class: logging.StreamHandler
      level: INFO
      formatter: default
      stream: ext://sys.stdout

  loggers:
    requests.packages.urllib3:
      level: INFO
      handlers: [console]
      propagate: no

  root:
    level: INFO
    handlers: [console]

logging_debug:
  version: 1
  disable_existing_loggers: False
  formatters:
    default:
        format: "[%(asctime)s] --> %(levelname)s: %(message)s"
        "()": "mantis.config_parsers.logging_utils.CustomFormatter"

  handlers:
    console:
      class: logging.StreamHandler
      level: DEBUG
      formatter: default
      stream: ext://sys.stdout

  loggers:
    requests.packages.urllib3:
      level: DEBUG
      handlers: [console]
      propagate: no

  root:
    level: DEBUG
    handlers: [console]