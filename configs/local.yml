# Do not store sensitive information and check-in code to gitlab

workflow:
  - workflowName: 'default'
    schedule: 'daily between 00:00 and 04:00'
    cmd: []
    workflowConfig:
#      - moduleName : discovery
#        tools: ['Subfinder']
#        order: 1
#      - moduleName: prerecon
#        tools: ['FindCDN', 'Naabu']
#        order: 2
#      - moduleName: activehostscan
#        tools: ['HTTPX_Active', 'HTTPX']
#        order: 3
#      - moduleName: activerecon
#        tools: ['Wafw00f']
#        order: 4
#      - moduleName: scan
#        tools: [ 'DNSTwister', 'Nuclei', 'Corsy']
#        order: 5
#      - moduleName: secretscanner
#        tools: ['SecretScanner']
#        order: 6
      - moduleName: secretscanner
        tools: ['GithubScanner']
        order: 6

# This workflow is for product security teams. It includes tools like dns and Ipinfo. Please provide the key for IPinfo     
  - workflowName: 'productsecurity'
    schedule: 'daily between 00:00 and 04:00'
    cmd: []
    scanNewOnly: true
    workflowConfig:
      - moduleName : dns
        tools: ['Route53', 'Cloudflare'] 
        order: 1
      - moduleName : discovery
        tools: ['Subfinder', 'SSLMate', 'Amass'] 
        order: 1
      - moduleName: prerecon
        tools: ['FindCDN', 'Naabu', 'IPinfo'] 
        order: 2
      - moduleName: activehostscan
        tools: ['HTTPX_Active', 'HTTPX']
        order: 3
      - moduleName: activerecon
        tools: ['Wafw00f']
        order: 4
      - moduleName: scan
        tools: [ 'DNSTwister', 'Nuclei', 'NucleiInfo', 'Corsy']
        order: 5
      - moduleName: secretscanner
        tools: ['SecretScanner']
        order: 6

  # This workflow excludes some tools viz SSLMate, IPinfo, DNSTwister, Csper
  - workflowName: 'bugbounty'
    schedule: 'daily between 00:00 and 04:00'
    cmd: []
    workflowConfig:
      - moduleName : discovery
        tools: ['Subfinder', 'Amass']
        order: 1
      - moduleName: prerecon
        tools: ['FindCDN', 'Naabu']
        order: 2
      - moduleName: activehostscan
        tools: ['HTTPX_Active', 'HTTPX']
        order: 3
      - moduleName: activerecon
        tools: ['Wafw00f']
        order: 4
      - moduleName: scan
        tools: [ 'Nuclei', 'NucleiInfo']
        order: 5
      - moduleName: secretscanner
        tools: ['SecretScanner']
        order: 6


  - workflowName: 'test'
    schedule: 'daily between 00:00 and 04:00'
    cmd: []
    workflowConfig:
      - moduleName : dns
        tools: ['Cloudflare'] 
        order: 1

nuclei_template_path:
  whitelist: 
  blacklist: 

aws:
  config_path: 
  credentials_path:

secretscanner:
  # org       : This will perform scan at the org level (https://api.github.com/orgs/{org}/repos?page=)
  # pattern   : This will perform scan across the publicly available repos based on the github_config in GitHub
  # public    : This will perform scan based on the Assets/Domain across public repos in the GitHub
#  github_method: ['org','pattern','public']
  github_method: ['public']


github_config:
  host: "https://api.github.com"
  tokens : [ "Z2l0aHViX3BhdF8xMUFLRk1LNFEwYTRKRVhDQkcxNDFjX29lS2tBSkJ6dnU3a0lmaGdFcTg0VVZrUUhSNWIybFViaElhckk2Z0JzaDcyVFYzRVJNT211TlJWSXpv",
            "Z2l0aHViX3BhdF8xMUFGU1pJSFEwY1pCOGZROFl1U1FLXzV2TTBkMk16N2pubHJxVkZrVDFMeTFMNjQwcXZQcUl1a1ptdnhIVk1VZEJKRUJDN1Y1SmlzbVZIY1lR"]
  download_location: '/tmp/repos/'

app:
  default: ["None"]
  
notify:
  - teamName: hitesh
    scanEfficiency: true 
    channel:
      slack:
        - REDACTED
    app: []
    assets:
#      - subdomain
#      - certificate
    findings: 
#      - vulnerability
      - secret


dbConfig:
  mongoConnectionString: "mongodb://root:pass123@localhost:27017/?authMechanism=DEFAULT"


logging:
  version: 1
  disable_existing_loggers: True
  formatters:
    default:
        format: "[%(asctime)s] --> %(levelname)s: %(message)s"
        "()": "mantis.config_parsers.logging_utils.CustomFormatter"
        
  handlers:
    console:
      class: logging.StreamHandler
      level: INFO
      formatter: default
      stream: ext://sys.stdout

  loggers:
    requests.packages.urllib3:
      level: INFO
      handlers: [console]
      propagate: no

  root:
    level: INFO
    handlers: [console]

logging_debug:
  version: 1
  disable_existing_loggers: False
  formatters:
    default:
        format: "[%(asctime)s] --> %(levelname)s: %(message)s"
        "()": "mantis.config_parsers.logging_utils.CustomFormatter"

  handlers:
    console:
      class: logging.StreamHandler
      level: DEBUG
      formatter: default
      stream: ext://sys.stdout

  loggers:
    requests.packages.urllib3:
      level: DEBUG
      handlers: [console]
      propagate: no

  root:
    level: DEBUG
    handlers: [console]